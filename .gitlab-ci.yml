stages:
  - test
  - sonarqube

code_quality:
  stage: test
  image: registry.gitlab.com/gitlab-org/ci-cd/codequality:latest
  script:
    - /codequality
  allow_failure: false  # Pipeline fails if code quality issues are found
  artifacts:
    reports:
      codequality: gl-code-quality-report.json

sonarqube:
  stage: sonarqube
  image: sonarsource/sonar-scanner-cli
  before_script:
  - curl -Lo jq https://github.com/stedolan/jq/releases/latest/download/jq-linux64
  - chmod +x jq
  - export PATH=$PWD:$PATH  # Add current directory to PATH

  script:
    - sonar-scanner -Dsonar.token="ed9e846a1947052b39fde8b0d9a535ee976de71e"
    - |
      SONAR_ISSUES=$(./jq '.total' <<< "$(curl -s "https://sonarcloud.io/api/issues/search?componentKeys=OveRide-Phoenix_kk_v1")")
      if [ "$SONAR_ISSUES" -gt 0 ]; then
        MR_AUTHOR=$(./jq -r '.author.username' <<< "$(curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_ID")")
        curl --request POST --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
          --header "Content-Type: application/json" \
          --data "{
            \"title\": \"Fix SonarQube Issues\",
            \"description\": \"SonarQube found $SONAR_ISSUES issues in your code.\",
            \"assignee_ids\": [\"$MR_AUTHOR\"]
          }" \
          "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/issues"
      fi
  allow_failure: true
