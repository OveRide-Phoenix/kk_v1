stages:
  - test
  - sonarqube

code_quality:
  stage: test
  image: registry.gitlab.com/gitlab-org/ci-cd/codequality:latest
  script:
    - /codequality
  allow_failure: false  # Pipeline fails if code quality issues are found
  artifacts:
    reports:
      codequality: gl-code-quality-report.json

sonarqube:
  stage: sonarqube
  image: debian:latest
  before_script:
    # Update and install required packages
    - apt-get update && apt-get install -y wget unzip openjdk-17-jre jq curl
    # Download SonarScanner CLI (adjust version if needed)
    - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
    - unzip sonar-scanner-cli-5.0.1.3006-linux.zip
    # Add SonarScanner to PATH
    - export PATH=$PATH:$(pwd)/sonar-scanner-cli-5.0.1.3006-linux/bin
  script:
    - sonar-scanner -Dsonar.token="ed9e846a1947052b39fde8b0d9a535ee976de71e"
    # Fetch SonarQube issues report and store it as an artifact
    - curl -s "https://sonarcloud.io/api/issues/search?componentKeys=OveRide-Phoenix_kk_v1" > sonar-report.json
  artifacts:
    paths:
      - sonar-report.json
  allow_failure: true  # SonarQube issues won't fail the pipeline
